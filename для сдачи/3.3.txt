Программа полностью рабочая, но надо ее запускать с помощью sudo + не использовать self а действовать так:
1) открыть два терминала рядом
2) на одном запустить программу из пункта 4.2 (./heap-overflow или ./stack-overflow)
3) на другом терминале запустить sudo ./lspagemap PID | ack stack (или ack heap), где 
PID - номер процесса программы из пункта (2) 
можно сначала запустить (3) пока у программы стоит sleep чтобы показать что некоторые регионы сначала не имеют физического отображения, а потом запустить (3) спустя некоторое время после sleep у программы (2) и показать что больше виртуальных страниц обрели отображение

ОПИСАНИЕ ВЫВОДА:

1. Bits 0-54 page frame number (PFN) if present - это номер фрейма страницы, если она присутствует в физической памяти.
2. Bits 0-4 swap type if swapped - это тип обмена страницы, если она находится в файле подкачки.
3. Bits 5-54 swap offset if swapped - это смещение страницы в файле подкачки, если она там находится.
4. Bit 55 pte is soft-dirty - это показатель того, что Page Table Entry (PTE) был изменен и нуждается в сохранении на диск.
5. Bit 56 page exclusively mapped - это означает, что страница отображается только в текущем процессе и не доступна другим процессам.
6. Bits 57-60 zero - это зарезервированные биты, которые не используются.
7. Bit 61 page is file-page or shared-anon - это означает, что страница является либо файловой страницей, либо страницей, которая разделяется между несколькими процессами.
8. Bit 62 page swapped - это показатель того, что страница находится в файле подкачки.
9. Bit 63 page present - это показатель того, что страница присутствует в физической памяти.


ОПИСАНИЕ РАБОТЫ ПРОГРАММЫ:
1) Берется пид процесса, открывается /proc/PID/maps
2) оттуда берутся интересные регионы для анализа
3) открывается файл /proc/PID/pagemap
4) делается seek на нужный адресс (+ адрессная и числовая арифметика так как каждое 64 битное число отвечает за одну страницу)
5) берется 64 битное число из этого файла, парсится и выводится